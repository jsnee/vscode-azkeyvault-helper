{"version":3,"sources":["../webpack/bootstrap",".././src/ExtensionCommands.ts",".././src/ExtensionSettings.ts",".././src/KeyVaultHelper.ts",".././src/extension.ts",".././src/ui/KeyVaultSecretTreeItem.ts",".././src/ui/KeyVaultTreeItem.ts",".././src/ui/secretExplorerProvider.ts","../external \"child_process\"","../external \"vscode\""],"names":[],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/extension.ts\");\n","import { window, workspace, ViewColumn } from \"vscode\";\r\nimport { ITreeItem } from \"./ui/ITreeItem\";\r\nimport { KeyVaultHelper } from \"./KeyVaultHelper\";\r\n\r\nexport namespace ExtensionCommands {\r\n    \r\n    export async function getAllSecrets(): Promise<void> {\r\n    }\r\n\r\n    async function promptVaultName(): Promise<string | undefined> {\r\n        return await window.showInputBox({ placeHolder: \"Vault Name\" });\r\n    }\r\n\r\n    export async function showSecret(item?: ITreeItem): Promise<void> {\r\n        if (item && item.getSecretValue) {\r\n            const doc = await workspace.openTextDocument({\r\n                content: item.getSecretValue()\r\n            });\r\n            await window.showTextDocument(doc, ViewColumn.Active);\r\n        }\r\n    }\r\n}","import { workspace } from \"vscode\";\r\n\r\nclass Settings {\r\n    public get keyvaults(): string[] | undefined {\r\n        return workspace.getConfiguration('azkeyvaulthelper').get('keyvaults');\r\n    }\r\n\r\n    public set keyvaults(val: string[] | undefined) {\r\n        workspace.getConfiguration('azkeyvaulthelper').update('keyvaults', val);\r\n    }\r\n\r\n    public async updateKeyvaults(val: string[] | undefined): Promise<void> {\r\n        return await workspace.getConfiguration('azkeyvaulthelper').update('keyvaults', val);\r\n    }\r\n}\r\n\r\nexport const ExtensionSettings: Settings = new Settings();","import { SecretAttributes } from \"@azure/keyvault-secrets\";\r\nimport { execSync } from \"child_process\";\r\n\r\nexport namespace KeyVaultHelper {\r\n    export function listSecrets(vaultName: string): SecretAttributes[] {\r\n        let results: SecretAttributes[] = [];\r\n        let buf = execSync(`az keyvault secret list --vault-name \"${vaultName}\"`);\r\n        console.log(buf.toString());\r\n        let secretsStr = buf.toString();\r\n        if (secretsStr) {\r\n            let secrets = JSON.parse(secretsStr) as SecretAttributes[];\r\n            if (secrets.length) {\r\n                for (let secret of secrets) {\r\n                    results.push(secret);\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    export function getSecret(vaultName: string, secretName: string): any {\r\n        let buf = execSync(`az keyvault secret show --vault-name \"${vaultName}\" --name \"${secretName}\"`);\r\n        let secretsStr = buf.toString();\r\n        if (secretsStr) {\r\n            return JSON.parse(secretsStr);\r\n        }\r\n    }\r\n}","import { ExtensionCommands } from './ExtensionCommands';\nimport { ExtensionContext, window, commands } from 'vscode';\nimport { secretExplorerProvider } from './ui/secretExplorerProvider';\n\nexport function activate(context: ExtensionContext) {\n    const treeView = window.createTreeView('azkeyvaulthelper', { treeDataProvider: secretExplorerProvider });\n    let getSecretsisposable = commands.registerCommand(\"azkeyvaulthelper.getSecrets\", ExtensionCommands.getAllSecrets);\n    context.subscriptions.push(getSecretsisposable);\n\n    let refreshDisposable = commands.registerCommand(\"azkeyvaulthelper.refresh\", secretExplorerProvider.refresh, secretExplorerProvider);\n    context.subscriptions.push(refreshDisposable);\n\n    let showSecretDisposable = commands.registerCommand(\"azkeyvaulthelper.showSecret\", ExtensionCommands.showSecret);\n    context.subscriptions.push(showSecretDisposable);\n}\n\nexport function deactivate() {}\n","import { ITreeItem } from \"./ITreeItem\";\r\nimport { TreeItem } from \"vscode\";\r\nimport { SecretAttributes } from \"@azure/keyvault-secrets\";\r\nimport { KeyVaultHelper } from \"../KeyVaultHelper\";\r\n\r\nexport class KeyVaultSecretTreeItem implements ITreeItem {\r\n    private _name: string;\r\n    private _vaultName: string;\r\n\r\n    constructor(vaultName: string, secretAttributes: SecretAttributes) {\r\n        if (secretAttributes.id && !secretAttributes.name) {\r\n            let matches = secretAttributes.id.match(/secrets\\/(.*)$/);\r\n            if (matches) {\r\n                this._name = matches[1];\r\n            } else {\r\n                this._name = secretAttributes.name;\r\n            }\r\n        } else {\r\n            this._name = secretAttributes.name;\r\n        }\r\n        this._vaultName = vaultName;\r\n    }\r\n\r\n    public getContextValue(): string {\r\n        return \"KeyVaultSecret\";\r\n    }\r\n\r\n    public getTreeItem(): TreeItem | Thenable<TreeItem> {\r\n        return new TreeItem(this._name);\r\n    }\r\n\r\n    public getSecretValue(): string {\r\n        let secret = KeyVaultHelper.getSecret(this._vaultName, this._name);\r\n        if (secret) {\r\n            return secret.value;\r\n        }\r\n        return \"\";\r\n    }\r\n}","import { ITreeItem } from \"./ITreeItem\";\r\nimport { TreeItem, TreeItemCollapsibleState } from \"vscode\";\r\nimport { KeyVaultSecretTreeItem } from \"./KeyVaultSecretTreeItem\";\r\nimport { KeyVaultHelper } from \"../KeyVaultHelper\";\r\n\r\nexport class KeyVaultTreeItem implements ITreeItem {\r\n    private _vaultName: string;\r\n\r\n    constructor(vaultName: string) {\r\n        this._vaultName = vaultName;\r\n    }\r\n\r\n    public getContextValue(): string {\r\n        return \"KeyVault\";\r\n    }\r\n\r\n    public getTreeItem(): TreeItem | Thenable<TreeItem> {\r\n        return new TreeItem(this._vaultName, TreeItemCollapsibleState.Collapsed);\r\n    }\r\n\r\n    public getChildren(): ITreeItem[] {\r\n        let results: KeyVaultSecretTreeItem[] = [];\r\n        for (let secret of KeyVaultHelper.listSecrets(this._vaultName)) {\r\n            results.push(new KeyVaultSecretTreeItem(this._vaultName, secret));\r\n        }\r\n        return results;\r\n    }\r\n}","import { Event, TreeDataProvider, EventEmitter, TreeItem } from \"vscode\";\r\nimport { ITreeItem } from \"./ITreeItem\";\r\nimport { ExtensionSettings } from \"../ExtensionSettings\";\r\nimport { KeyVaultTreeItem } from \"./KeyVaultTreeItem\";\r\n\r\nclass SecretExplorerProvider implements TreeDataProvider<ITreeItem> {\r\n    public readonly onDidChangeTreeData: Event<ITreeItem>;\r\n    private _onDidChangeTreeData: EventEmitter<ITreeItem>;\r\n\r\n    constructor() {\r\n        this._onDidChangeTreeData = new EventEmitter<ITreeItem>();\r\n        this.onDidChangeTreeData = this._onDidChangeTreeData.event;\r\n        this.refresh();\r\n    }\r\n    \r\n    public getTreeItem(element: ITreeItem): TreeItem | Thenable<TreeItem> {\r\n        return Promise.resolve(element.getTreeItem()).then(item => {\r\n            item.contextValue = element.getContextValue();\r\n            return item;\r\n        });\r\n    }\r\n\r\n    public async getChildren(element?: ITreeItem): Promise<ITreeItem[] | null | undefined> {\r\n        if (element === undefined) {\r\n            const keyVaults = ExtensionSettings.keyvaults;\r\n            if (keyVaults && keyVaults.length) {\r\n                let results: KeyVaultTreeItem[] = [];\r\n                for (let vault of keyVaults) {\r\n                    results.push(new KeyVaultTreeItem(vault));\r\n                }\r\n                return results;\r\n            }\r\n        } else {\r\n            return element.getChildren && element.getChildren();\r\n        }\r\n    }\r\n\r\n    public refresh(item?: ITreeItem): void {\r\n        this._onDidChangeTreeData.fire(item);\r\n    }\r\n}\r\n\r\nexport const secretExplorerProvider = new SecretExplorerProvider();","module.exports = require(\"child_process\");","module.exports = require(\"vscode\");"],"sourceRoot":""}